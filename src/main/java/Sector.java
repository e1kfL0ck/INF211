// default package
// Generated 3 mars 2025, 15:44:26 by Hibernate Tools 5.6.15.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Sector generated by hbm2java
 */
@Entity
@Table(name="sector"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="label") 
)
public class Sector  implements java.io.Serializable {


     private int id;
     private String label;
     private Set<Application> applications = new HashSet<Application>(0);
     private Set<Joboffer> joboffers = new HashSet<Joboffer>(0);

    public Sector() {
    }

	
    public Sector(int id, String label) {
        this.id = id;
        this.label = label;
    }
    public Sector(int id, String label, Set<Application> applications, Set<Joboffer> joboffers) {
       this.id = id;
       this.label = label;
       this.applications = applications;
       this.joboffers = joboffers;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="label", unique=true, nullable=false, length=50)
    public String getLabel() {
        return this.label;
    }
    
    public void setLabel(String label) {
        this.label = label;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="applicationsector", schema="public", joinColumns = { 
        @JoinColumn(name="sector_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="application_id", nullable=false, updatable=false) })
    public Set<Application> getApplications() {
        return this.applications;
    }
    
    public void setApplications(Set<Application> applications) {
        this.applications = applications;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="joboffersector", schema="public", joinColumns = { 
        @JoinColumn(name="sector_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="job_offer_id", nullable=false, updatable=false) })
    public Set<Joboffer> getJoboffers() {
        return this.joboffers;
    }
    
    public void setJoboffers(Set<Joboffer> joboffers) {
        this.joboffers = joboffers;
    }




}


