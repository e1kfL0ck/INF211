// default package
// Generated 3 mars 2025, 15:44:26 by Hibernate Tools 5.6.15.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Joboffer generated by hbm2java
 */
@Entity
@Table(name="joboffer"
    ,schema="public"
)
public class Joboffer  implements java.io.Serializable {


     private int id;
     private Company company;
     private Qualificationlevel qualificationlevel;
     private String title;
     private Date publicationdate;
     private String description;
     private Set<Sector> sectors = new HashSet<Sector>(0);
     private Set<Applicationmessage> applicationmessages = new HashSet<Applicationmessage>(0);
     private Set<Joboffermessage> joboffermessages = new HashSet<Joboffermessage>(0);

    public Joboffer() {
    }

	
    public Joboffer(int id, Company company, String title, Date publicationdate) {
        this.id = id;
        this.company = company;
        this.title = title;
        this.publicationdate = publicationdate;
    }
    public Joboffer(int id, Company company, Qualificationlevel qualificationlevel, String title, Date publicationdate, String description, Set<Sector> sectors, Set<Applicationmessage> applicationmessages, Set<Joboffermessage> joboffermessages) {
       this.id = id;
       this.company = company;
       this.qualificationlevel = qualificationlevel;
       this.title = title;
       this.publicationdate = publicationdate;
       this.description = description;
       this.sectors = sectors;
       this.applicationmessages = applicationmessages;
       this.joboffermessages = joboffermessages;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="company_id", nullable=false)
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="qualification_level_id")
    public Qualificationlevel getQualificationlevel() {
        return this.qualificationlevel;
    }
    
    public void setQualificationlevel(Qualificationlevel qualificationlevel) {
        this.qualificationlevel = qualificationlevel;
    }

    
    @Column(name="title", nullable=false)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="publicationdate", nullable=false, length=13)
    public Date getPublicationdate() {
        return this.publicationdate;
    }
    
    public void setPublicationdate(Date publicationdate) {
        this.publicationdate = publicationdate;
    }

    
    @Column(name="description")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="joboffersector", schema="public", joinColumns = { 
        @JoinColumn(name="job_offer_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="sector_id", nullable=false, updatable=false) })
    public Set<Sector> getSectors() {
        return this.sectors;
    }
    
    public void setSectors(Set<Sector> sectors) {
        this.sectors = sectors;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="joboffer")
    public Set<Applicationmessage> getApplicationmessages() {
        return this.applicationmessages;
    }
    
    public void setApplicationmessages(Set<Applicationmessage> applicationmessages) {
        this.applicationmessages = applicationmessages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="joboffer")
    public Set<Joboffermessage> getJoboffermessages() {
        return this.joboffermessages;
    }
    
    public void setJoboffermessages(Set<Joboffermessage> joboffermessages) {
        this.joboffermessages = joboffermessages;
    }




}


