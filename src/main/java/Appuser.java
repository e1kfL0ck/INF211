// default package
// Generated 3 mars 2025, 15:44:26 by Hibernate Tools 5.6.15.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Appuser generated by hbm2java
 */
@Entity
@Table(name="appuser"
    ,schema="public"
    , uniqueConstraints = @UniqueConstraint(columnNames="mail") 
)
public class Appuser  implements java.io.Serializable {


     private int id;
     private String mail;
     private String password;
     private String usertype;
     private Set<Candidate> candidates = new HashSet<Candidate>(0);
     private Set<Company> companies = new HashSet<Company>(0);

    public Appuser() {
    }

	
    public Appuser(int id, String mail, String password) {
        this.id = id;
        this.mail = mail;
        this.password = password;
    }
    public Appuser(int id, String mail, String password, String usertype, Set<Candidate> candidates, Set<Company> companies) {
       this.id = id;
       this.mail = mail;
       this.password = password;
       this.usertype = usertype;
       this.candidates = candidates;
       this.companies = companies;
    }
   
     @Id 

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

    
    @Column(name="mail", unique=true, nullable=false, length=50)
    public String getMail() {
        return this.mail;
    }
    
    public void setMail(String mail) {
        this.mail = mail;
    }

    
    @Column(name="password", nullable=false, length=50)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="usertype", length=50)
    public String getUsertype() {
        return this.usertype;
    }
    
    public void setUsertype(String usertype) {
        this.usertype = usertype;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="appuser")
    public Set<Candidate> getCandidates() {
        return this.candidates;
    }
    
    public void setCandidates(Set<Candidate> candidates) {
        this.candidates = candidates;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="appuser")
    public Set<Company> getCompanies() {
        return this.companies;
    }
    
    public void setCompanies(Set<Company> companies) {
        this.companies = companies;
    }




}


